name: Docker

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

env:
  ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}
  ALIYUN_NAME_SPACE: ${{ secrets.ALIYUN_NAME_SPACE }}
  ALIYUN_REGISTRY_USER: ${{ secrets.ALIYUN_REGISTRY_USER }}
  ALIYUN_REGISTRY_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build and push image Aliyun
        run: |
          export ALIYUN_REGISTRY="${{ secrets.ALIYUN_REGISTRY }}"
          export ALIYUN_NAME_SPACE="${{ secrets.ALIYUN_NAME_SPACE }}"
          export ALIYUN_REGISTRY_USER="${{ secrets.ALIYUN_REGISTRY_USER }}"
          export ALIYUN_REGISTRY_PASSWORD="${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

          echo "ALIYUN_REGISTRY: $ALIYUN_REGISTRY"
          echo "ALIYUN_NAME_SPACE: $ALIYUN_NAME_SPACE"
          echo "ALIYUN_REGISTRY_USER: $ALIYUN_REGISTRY_USER"
          echo "ALIYUN_REGISTRY_PASSWORD: $ALIYUN_REGISTRY_PASSWORD"

          docker login -u $ALIYUN_REGISTRY_USER -p $ALIYUN_REGISTRY_PASSWORD $ALIYUN_REGISTRY

          # 数据预处理,判断镜像是否重名
          declare -A duplicate_images
          declare -A temp_map
          while IFS= read -r line; do
              [[ -z "$line" ]] && continue
              if echo "$line" | grep -q '^\s*#'; then
                  continue
              fi
              image=$(echo "$line" | awk '{print $NF}')
              image="${image%%@*}"
              image_name_tag=$(echo "$image" | awk -F'/' '{print $NF}')
              name_space=$(echo "$image" | awk -F'/' '{if (NF==3) print $2; else if (NF==2) print $1; else print ""}')
              name_space="${name_space}_"
              image_name=$(echo "$image_name_tag" | awk -F':' '{print $1}')
              if [[ -n "${temp_map[$image_name]}" ]]; then
                   if [[ "${temp_map[$image_name]}" != $name_space  ]]; then
                      duplicate_images[$image_name]="true"
                   fi
              else
                  temp_map[$image_name]=$name_space
              fi       
          done < images.txt
          echo "ALIYUN_REGISTRY: $ALIYUN_REGISTRY"
          echo "ALIYUN_NAME_SPACE: $ALIYUN_NAME_SPACE"
          echo "ALIYUN_REGISTRY_USER: $ALIYUN_REGISTRY_USER"
          echo "ALIYUN_REGISTRY_PASSWORD: $ALIYUN_REGISTRY_PASSWORD"
          while IFS= read -r line; do
              [[ -z "$line" ]] && continue
              if echo "$line" | grep -q '^\s*#'; then
                  continue
              fi
              echo "docker pull $line"
              docker pull $line
              platform=$(echo "$line" | awk -F'--platform[ =]' '{if (NF>1) print $2}' | awk '{print $1}')
              if [ -n "$platform" ]; then
                  platform_prefix="${platform//\//_}_"
              else
                  platform_prefix=""
              fi
              image=$(echo "$line" | awk '{print $NF}')
              image_name_tag=$(echo "$image" | awk -F'/' '{print $NF}')
              name_space=$(echo "$image" | awk -F'/' '{if (NF==3) print $2; else if (NF==2) print $1; else print ""}')
              image_name=$(echo "$image_name_tag" | awk -F':' '{print $1}')
              name_space_prefix=""
              if [[ -n "${duplicate_images[$image_name]}" ]]; then
                 if [[ -n "${name_space}" ]]; then
                    name_space_prefix="${name_space}_"
                 fi
              fi
              image_name_tag="${image_name_tag%%@*}"
              new_image="${ALIYUN_REGISTRY}/${ALIYUN_NAME_SPACE}/${platform_prefix}${name_space_prefix}${image_name_tag}"
              echo "docker tag $image $new_image"
              docker tag "$image" "$new_image"
              echo "docker push $new_image"
              docker push "$new_image"
          done < images.txt
